<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bindingSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +dxzz7kSFREKOJQREKFfUMXnYNh6+05JFz8k/PFCdRgXtKz9lK33x0fZtmNcOy8L+7V9daxqxwW23t93
        c2HAkXTt2lWef/55V6Ii8MCGAs7W4eHXAAK02Qcd5VGjRlXW8VprPEDZHxMBotCmIYO2WuNru4ZdtYCz
        sI1txzh+gNXad3NhwJGsv/76MnbsWFeiIqoFnH3Q/Qfbtoe299/poF1DQvn7sIEG6I+6WuOH2u1YWQEH
        dh7+nGrtuzkx4EjWXXddeemll1yJigg9xP6DnhVwaMND7y92e3888OuqBVyt8f25AcapFnCo98fCGODP
        Kc+xNRcGHMnaa68tr7zyiitREXhY/YAIPei2j20Pbe/zxwO/rp53cFaovdo7uFBflKsFXK19NycGHMka
        a6whr732mitREdUeevughwJOQwH8MgLG8scDv65awEGe8bUdYyLUQgGHPuirUEa7buvvB2rtu7kw4EhW
        W201eeONN1yJiigScBoMfpDoEgqJGQk4yBpfQ00XjBMKOMCY2g/rmIeOFzou0Dos/r6bCwOOZJVVVpG3
        3nrLlShGQ4YMcWtpYcCRrLTSSvLOO++4EsWoU6dObi0tDDiSFVZYQd59911Xohgx4ChZXbp0kffff9+V
        KEYMOErWMsssIx988IErUYwYcJSspZdeWj766CNXohgx4ChZSy65pEycONGVKEYMOErW4osvLp988okr
        UYwYcJSsRRddVD777DNXohgx4ChZCy+8sHzxxReuRDFiwFGyOnbsKJMnT3YlihEDjpK1wAILyNdff+1K
        FCMGHCVrvvnmk2+//daVKEYMOEpWhw4d5Pvvv3clihEDjpLVrl07+eGHH1yJYsSAo2TNNddc8tNPP7kS
        xWL06NGyzz77yCKLLCJt2rSpvO67775JfQYuA45kjjnmkF9++cWVqLX7448/5LDDDpOlllpKLrvsMvn0
        008r7+DwOnz48Ep9v379Kv1ix4AjmW222WTq1KmuRK3dgAEDZNttt53u2w72S9QpU6bINttsI4cccoir
        iRcDjmTWWWeV33//3ZWoTBBGPXv2lN69e8uYMWNk2rRpriUMX5Z27txZfvzxR1fzF/97cAg//JGFp59+
        2tXEiQFHMvPMM9d8cKjlfPPNN5U/K4932givbt26ybBhw4K/nN2jRw+5/PLLXekfoR8y4MtVfI8uZgw4
        mu7DQLi0nqVt27bSp08faWxsdFfyryCbNGmSK/0jFHAff/xx5Q8txIwBR1RyeAe33HLLVX4he80115Rd
        d91VRowYEXwHh3fjoTCstswyyyxuyzgx4IhKrN7vwfEd3PQYcEQR4ffgpseAI4oIfoqKn476//XODzj+
        FJWIWqX+/ftXfs+t2u/Bob579+78PTgian3y/E+GI444gv+TgYhaL/yfU3yPDX+x2f5f1LFjx7oe8WPA
        ESUg9EOGFDDgiBLAgCOiaDHgiChaDDgiis64ceMqrxpwWk4FA44oYmeddZYMHjy4EnCnnHJKpZwSBhxR
        xCZMmCALLrigzD777JXPv/3ggw9cSxoYcESR22CDDSp/OaRr166uJh0MOKLIHXDAAZWA69Wrl6tJBwOO
        KHIjR46s/E+GBx980NWkgwFHFLlff/1V2rdvX3lNDQOOKAGXXHKJW0sLA44oAal+ahoDjijAfm4Bl3Iu
        eTDgiAJqPUBsL3e7yteLKDFlf4DZnt2u8vUiSkzZH2C2Z7erfL2IElP2B5jt2e0qXy+ixJT9AWZ7drvK
        14soMWV/gNme3a7y9SJKTNkfYLZnt6t8vYgSU/YHmO3Z7SpfL6LElP0BZnt2u8rXiygxeIC4lHvJgwFH
        RNFiwBFRtBhwRBQtBhwRRYsBR0TRYsARlVjenxZSGM8eUQvzf/2hoaHBtdQXcPX0xT7Gjx/vSjOmKcdq
        agw4ohaGYLIB0bdv38oC9YRWPRhwRPSf8ANu1KhRf7+LswGHOpR18UPF7zt06NDp+iuEp61HP2XrdXy8
        oox5Kd0ua6wyYMARtTAEgw2rPO/gEDZ+my0j4DQkwY4JaPMDEnUaYjZkwe4vz1hlwYAjamEIDrvYYNFQ
        CfGDxfb12/zA8tuxbtsB49k+CDV/fuCPVSYMOKIW5geJZUPL/5ITi77jAtvXD51aAafv0PzF9sE66uw+
        gQFHRFX5QWKhDdBuAwpQbqqAC43vQzsWux/wxyoTBhxRC8sTcH5A6TuuGQk4uy34dfb7bPoDBX8dQmOV
        BQOOqIXlCTjQ74FhwbofLPUEHMo6lv3Jp9Zh0bH1S2MLY2nIVRurDBhwRBQtBhwRRYsBR0TRYsARUbQY
        cEQULQYcEUWLAUdE0WLAEVGkRP4HsKb+RPd9cGYAAAAASUVORK5CYII=
</value>
  </data>
</root>